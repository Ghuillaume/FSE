/* Evaluations_r
 * Author: 
 * Creation date: mer. dÃ©c. 4 2013
 */
REFINEMENT
   Evaluations_r
REFINES
    Evaluations
    
SEES
    CtxR_Evaluations
    
CONCRETE_VARIABLES
    c_etudiants,
    c_modules,
    c_groupes,
    c_projets,
    
    c_est_inscrit_a,
	c_module_de,
    c_realise_par,
    c_realise_par_groupe,
    c_note
   
INVARIANT
    c_etudiants : ETUDIANT --> OKKO
    & etudiants = c_etudiants~[{ok}]
    & c_modules : MODULE --> OKKO
    & modules = c_modules~[{ok}]
    & c_groupes : GROUPE --> OKKO
    & groupes = c_groupes~[{ok}]
    & c_projets : PROJET --> OKKO
    & projets = c_projets~[{ok}]
    
    & c_est_inscrit_a : (ETUDIANT * (MODULE)) --> 0..1
    & est_inscrit_a = dom(c_est_inscrit_a |> {1} )
    & c_module_de : PROJET --> MODULE
    & module_de = (projets <| c_module_de |> modules)
    & c_realise_par : (PROJET * (ETUDIANT)) --> 0..1
    & realise_par = dom(c_realise_par |> {1} )
    & c_realise_par_groupe : PROJET --> GROUPE
    & realise_par_groupe = (projets <| c_realise_par_groupe |> groupes)
    & c_note : (ETUDIANT*MODULE) --> NAT
    & note = ((etudiants*modules) <| c_note)
    
    
INITIALISATION
   c_etudiants := (ETUDIANT)*{ko} ||
   c_modules := (MODULE)*{ko} ||
   c_groupes := (GROUPE)*{ko} ||
   c_projets := (PROJET)*{ko} ||
   
   c_est_inscrit_a := (ETUDIANT * (MODULE))*{0} ||
   c_module_de := (PROJET)*(MODULE) ||
   c_realise_par := (PROJET * (ETUDIANT))*{0} ||
   c_realise_par_groupe := (PROJET)*(GROUPE) ||
   c_note := ((ETUDIANT)*(MODULE))*(NAT)

OPERATIONS
   inscrire_etudiant_module ( ee , mm ) =
   BEGIN
       c_est_inscrit_a(ee |-> mm) := 1
   END
   ;

   desinscrire_etudiant_module ( ee , mm ) =
   BEGIN
       c_est_inscrit_a(ee |-> mm) := 1 ||
       ANY projet
       WHERE
           projet : PROJET & projet = c_module_de~(mm)
       THEN
           c_realise_par( projet |-> ee ) := 1
       END
   END
   ;

   inscrire_etudiant_projet ( ee , pp ) =
   BEGIN
       c_realise_par( pp |-> ee ) := 1
   END
   ;

   desinscrire_etudiant_projet ( ee , pp ) =
   BEGIN
       c_realise_par( pp |-> ee ) := 1
   END
   ;

   ajouter_module ( mm ) =
   BEGIN
       c_modules(mm) := ok
   END
   ;

   ajouter_groupe ( gg ) =
   BEGIN
       c_groupes(gg) := ok
   END
   ;

   ajouter_projet ( pp , mm ) =
   BEGIN
       c_projets(pp) := ok ||
       c_module_de(pp) := mm
   END
   ;

   affecter_groupe ( gg , pp ) =
   BEGIN
       c_realise_par_groupe(pp) := gg
   END
   ;

   ajouter_etudiant ( ee ) =
   BEGIN
       c_etudiants(ee) := ok
   END
   ;

   /*gg <-- liste_groupes ( ee ) =
   BEGIN
       gg := ran(dom( ( {ee} <| dom(c_est_dans_groupe)) <| c_est_dans_groupe |> {1}))
   END
   ;*/

   nn , pp <-- liste_projets ( ee ) =
   BEGIN
       pp := dom(dom( (dom(c_realise_par) |> {ee}) <| c_realise_par |> {1})) ||
       nn := card ( dom(dom( (dom(c_realise_par) |> {ee}) <| c_realise_par |> {1})) )
   END
   ;

   /*ee <-- participent_a_plus_de ( nn ) =
   BEGIN
       ANY etudiant
       WHERE
           etudiant : dom(c_etudiants |> {ok})
       THEN
           IF ( card ( ran(dom( ( {etudiant} <| dom(c_est_dans_groupe)) <| c_est_dans_groupe |> {1})) ) > nn )
           THEN
               ee := ee \/ { etudiant }
           END
       END
   END
   ;*/

   nn <-- obtenir_note ( ee , mm ) =
   BEGIN
       nn := c_note ( ee , mm )
   END
   ;

   saisir_note ( ee , mm , nn ) =
   BEGIN
       c_note ( ee , mm ) := nn
   END
   ;

   ee <-- etudiants_sans_note =
   BEGIN
       ANY etudiant
       WHERE
           etudiant : ETUDIANT & etudiant : dom(c_etudiants |> {ok})
       THEN
           IF ( etudiant /: dom ( dom ( c_note ) ) )
           THEN
               ee := ee \/ { etudiant }
           END
       END
   END


END
